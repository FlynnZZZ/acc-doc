# js 其他类型&对象 
'.source.js':
  # Promise ------------------------------------------------
  'es2 Promise  promise构造函数':
    'prefix': 'Promise'
    'body': 'Promise'
  'es2 Promise.all(promiseArr)  全局模式':
    'prefix': 'Promise.all'
    'body': '''Promise.all([
        promise1
        ,...
      ])'''
  'es2 Promise.race(promiseArr)  竞速模式':
    'prefix': 'Promise.race'
    'body': '''Promise.race([
        promise1
        ,...
      ])'''
  'es2 new Promise(fn)  实例化Promise':
    'prefix': 'new-promise'
    'body': '''new Promise(function(rs,rj){
      })'''
  'es2 pms.then(fn)  pms,执行rs':
    'prefix': 'then-promise'
    'body': '''then(function(data){
      })'''
  'es2 pms.then(fn1,fn2)  pms,执行rs/rj':
    'prefix': 'then-both-promise'
    'body': '''then(function(data){
      }
      ,function(info){
      })'''
  'es2 pms.catch(fn)  pms,执行rj':
    'prefix': 'catch-promise'
    'body': '''catch(function(info){
      })'''
  'es2 pms.finally(fn)  pms,最终会执行':
    'prefix': 'finally-promise'
    'body': '''finally(function(data){
      })'''
  # XMLHttpRequest ------------------------------------------------
  'es2 new XMLHttpRequest()  AJAX核心对象':
    'prefix': 'new-XMLHttpRequest'
    'body': 'new XMLHttpRequest()'
  'es2 .setRequestHeader(key,val)  设定请求头':
    'prefix': 'setRequestHeader-xhr'
    'body': 'setRequestHeader(key,val)'
  'es2 .send([data])  发送请求数据':
    'prefix': 'send-xhr'
    'body': 'send($1)'
  'es2 ajax-pack  自定义的代码段':
    'prefix': 'ajax-pack'
    'body':  """
      var xhr = new XMLHttpRequest();
      xhr.open('Method', 'Url', true);
      xhr.setRequestHeader('Content-Type', 'application/json'); // 可选
      xhr.onreadystatechange = function() {
        if(xhr.readyState === 4) {
          console.log('state change end', xhr);
          console.log(xhr.status);
          console.log(xhr.response);
          var response = JSON.parse(xhr.response);
          console.log(response);
        } 
        else {
          console.log('change');
        }
      }
      var aoo = { username: 'gua', password: '123', };
      var data = JSON.stringify(aoo);
      xhr.send(data); 
      """
  # console ----------------------------------------------------
  'es2 console  控制台调试对象':
    'prefix': 'console'
    'body': 'console'
  'es2 .log("%c%s","color:red",str,$1)  带颜色输出':
    'prefix': 'console-log-color'
    'body': 'console.log("%c%s","color:red",666666,$1)'
  'es2 .info(val1,val2,..)  输出信息性消息':
    'prefix': 'console-info'
    'body': 'console.info($1)'
  'es2 .warn(val1,val2,..)  输出警告消息':
    'prefix': 'console-warn'
    'body': 'console.warn($1)'
  'es2 .error(val1,val2,..)  输出错误消息':
    'prefix': 'console-error'
    'body': 'console.error($1)'
  'es2 .clear()  清除所有输出':
    'prefix': 'console-clear'
    'body': 'console.clear()'
  'es2 .time("timer1")  计时器开始计时':
    'prefix': 'console-time'
    'body': 'console.time("timer1")'
  'es2 .timeEnd("timer1")  计时器结束计时并输出':
    'prefix': 'console-timeEnd'
    'body': 'console.timeEnd("timer1")'
  'es2 .trace("trace1")  调用路径显示':
    'prefix': 'console-trace'
    'body': 'console.trace("trace1")'
  'es2 .dir($1)  优化对对象的显示':
    'prefix': 'console-dir'
    'body': 'console.dir($1)'
  'es2 .table(val)  以表格形式输出':
    'prefix': 'console-table'
    'body': 'console.table($1)'
  'es2 .group($1)  组的开始':
    'prefix': 'console-group'
    'body': 'console.group($1)'
  'es2 .groupEnd()  组的结束':
    'prefix': 'console-groupEnd'
    'body': 'console.groupEnd()'
  
