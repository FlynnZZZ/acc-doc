# Vue 
'.source.js': 
  # 类 
  'JV Vue.extend({});  扩展Vue构造器':
    'prefix': 'vue-extend'
    'body': """Vue.extend({
        $1
      });""" 
  'JV Vue.component("c-name",{})  全局组件':
    'prefix': 'vue-component'
    'body': """Vue.component('c-name',{
      template: ''
      ,props: []
      ,props: {
        prop0: {
          default: xxx
          default: function () {
            return 
          }
          ,type: Number 
          ,required: bol  
          ,validator: function (val) { 
            return bol;
          }
        }
        ,prop1: Number 
        ,prop1: [Number,String] 
      }
      ,data: function(){
        return {
          
        }
      }
      ,created: function(){
      }
    });""" 
  'JV Vue.component("c-name",foo)  异步全局组件':
    'prefix': 'vue-component-async'
    'body': """Vue.component("c-name",function(rs,rj){
      rs({
        template: ''
        ,props: []
        ,props: {
          prop0: {
            default: xxx
            default: function () {
              return 
            }
            ,type: Number 
            ,required: bol  
            ,validator: function (val) { 
              return bol;
            }
          }
          ,prop1: Number 
          ,prop1: [Number,String] 
        }
        ,data: function(){
          return {
            
          }
        }
        ,created: function(){
        }
      })
    });""" 
  'JV Vue.directive("xx-xx",{});  全局指令':
    'prefix': 'vue-directive'
    'body': """Vue.directive('xxx-xxx', {
      bind : function(el,binds,vn){
        // binds{name,value,expression,arg,modifiers}
      }
      ,inserted : function(el,binds,vn){
        // binds{name,value,expression,arg,modifiers}
      }
      ,update : function(el,binds,vn,oVn){
        // binds{name,value,expression,arg,modifiers,oldValue}
      }
      ,componentUpdated : function(el,binds,vn,oVn){
        // binds{name,value,expression,arg,modifiers,oldValue}
      }
      ,unbind : function(el,binds,vn,oVn){
        // binds{name,value,expression,arg,modifiers}
      }
    });""" 
  'JV Vue.filter("xxx",foo);  全局过滤器':
    'prefix': 'vue-filter'
    'body': """Vue.filter('xxx',function(val,arg2,arg3){
        $1 
      });""" 
  'JV Vue.use($1)  注册插件':
    'prefix': 'vue-use'
    'body': 'Vue.use($1)'
  'JV new Vue({$1});  实例化Vue':
    'prefix': 'new-vue'
    'body': """new Vue({
        el: '#xxx'
        ,data: {}
        ,computed: {}
        ,watch: {}
        ,methods: {}
        ,created: function (){
          var that = this;
        }
        ,mounted: function (){
          var that = this;
          this.$nextTick(function () { });
          
        }
      });""" 
  # 配置属性 
  'JV props  KW,传递属性':
    'prefix': 'props-vue'
    'body': """props""" 
  'JV props-member  MB,传递属性的完整成员':
    'prefix': 'props-member-vue'
    'body': """xxx: {
        default: function () {  
          return ;
        }
        ,type: String, 
          // String Number Boolean Function Object Array Symbol
          // 自定义构造器函数,使用 instanceof 检测 
        ,required: true,  
        ,validator: function (value) {  
          return value > 10
        }
      } """ 
  'JV propsData  KW,传递属性数据':
    'prefix': 'propsData-vue'
    'body': """propsData""" 
  'JV computed  KW,计算值':
    'prefix': 'computed-vue'
    'body': """computed""" 
  'JV computed-member  MB,计算值的完整成员':
    'prefix': 'computed-member-vue'
    'body': """xxx: {
        get: function () {
          return 
        }
        ,set: function (val) {
          
        }
      } """ 
  'JV watch  KW,观察数据':
    'prefix': 'watch-vue'
    'body': """watch""" 
  'JV watch-member  MB,数据监听的完整成员':
    'prefix': 'watch-member-vue'
    'body': """'aaa.bbb': {
        deep: true 
        ,handler: function ( val, oldVal) {
          
        }
      }""" 
  'JV methods  KW,方法':
    'prefix': 'methods-vue'
    'body': """methods""" 
  'JV filters  KW,过滤':
    'prefix': 'filters-vue'
    'body': """filters""" 
  'JV directives  KW,指令':
    'prefix': 'directives-vue'
    'body': """directives""" 
  'JV mixins  KW,混合':
    'prefix': 'mixins-vue'
    'body': """mixins""" 
  'JV components  KW,子组件':
    'prefix': 'components-vue'
    'body': """components""" 
  'JV beforeCreate  实例刚创建':
    'prefix': 'beforeCreate-vue'
    'body': """beforeCreate""" 
  'JV created  实例创建完毕':
    'prefix': 'created-vue'
    'body': """created""" 
  'JV beforeMount  DOM渲染前':
    'prefix': 'beforeMount-vue'
    'body': """beforeMount""" 
  'JV mounted  DOM渲染完毕':
    'prefix': 'mounted-vue'
    'body': """mounted""" 
  'JV beforeUpdate  更新前':
    'prefix': 'beforeUpdate-vue'
    'body': """beforeUpdate""" 
  'JV updated  数据模型更新':
    'prefix': 'updated-vue'
    'body': """updated""" 
  'JV activated  组件被激活时':
    'prefix': 'activated-vue'
    'body': """activated""" 
  'JV deactivated  组件被移除时':
    'prefix': 'deactivated-vue'
    'body': """deactivated""" 
  'JV beforeDestroy  销毁前':
    'prefix': 'beforeDestroy-vue'
    'body': """beforeDestroy""" 
  'JV destroyed  销毁观察、组件及事件':
    'prefix': 'destroyed-vue'
    'body': """destroyed""" 
  # 属性方法 
  'JV .$set(obj,key,val)  更新数据':
    'prefix': 'set-vue'
    'body': """$set(obj,key,val)""" 
  'JV .$emit("eventName",data)  触发事件':
    'prefix': 'emit-vue'
    'body': """$emit('eventName',data)""" 
  'JV .$on("eventName",function (){})  监听事件':
    'prefix': 'on-vue'
    'body': """$on('eventName',function (data){
      $1
    })""" 
  'JV .$refs  ':
    'prefix': 'refs-vue'
    'body': """$refs""" 
  # vue插件 
  'JV new VueRouter();  实例化路由':
    'prefix': 'new-VueRouter'
    'body': """new VueRouter({
        routes : $1
      });""" 
  'JV redirect  KW,重定向':
    'prefix': 'redirect-KW-vue'
    'body': """redirect""" 
  'JV beforeRouteEnter  路由被确认前调用':
    'prefix': 'beforeRouteEnter-vue'
    'body': """beforeRouteEnter (to, from, next) {
      next(vm => {
        // 通过 `vm` 访问组件实例
      })
    }""" 
  'JV beforeRouteLeave  离开路由时调用':
    'prefix': 'beforeRouteLeave-vue'
    'body': """beforeRouteLeave (to, from, next) {
      $1
    }""" 
  'JV beforeRouteUpdate  当前路由改变,但该组件被复用时调用':
    'prefix': 'beforeRouteUpdate-vue'
    'body': """beforeRouteUpdate (to, from, next) {
      $1
    }""" 
  'JV .$router  路由实例对象':
    'prefix': 'router-vue'
    'body': """$router""" 
  'JV .$route  路由信息对象':
    'prefix': 'route-vue'
    'body': """$route""" 
  'JV new Vuex.Store({})  实例化数据中心':
    'prefix': 'new Vuex.store'
    'body': """new Vuex.store({ 
      state: { 
        stateData1: 123  
      }
      ,mutations: {  
        foo: function(state,data){  
        }
      }
      ,getters: {  
        boo: function({ stateData1 },getters){
          return state.xx;
        }
      }
      ,actions: {   
        goo: function({ commit },data){  
        }
      }
      ,modules: {  
      }
    })""" 
  'JV namespaced  KW,命名空间':
    'prefix': 'namespaced-KW-vue'
    'body': """namespaced""" 
  'JV mapState  FN,状态绑定函数':
    'prefix': 'mapState-FN-vue'
    'body': """mapState""" 
  'JV mapMutations  FN,commit绑定函数':
    'prefix': 'mapMutations-FN-vue'
    'body': """mapMutations""" 
  'JV mapGetters  FN,getters绑定函数':
    'prefix': 'mapGetters-FN-vue'
    'body': """mapGetters""" 
  'JV mapActions  FN,dispatch绑定函数':
    'prefix': 'mapActions-FN-vue'
    'body': """mapActions""" 
  'JV .$store  数据中心':
    'prefix': 'store-vue'
    'body': """$store""" 
  'JV .$store.state.xx  原始数据':
    'prefix': 'store.state-vue'
    'body': """$store.state""" 
  'JV .$store.getters.xx  组件中使用数据':
    'prefix': 'store.getters-vue'
    'body': """$store.getters""" 
  'JV .$store.commit("foo",data)  执行mutations的方法‹操作state›':
    'prefix': 'store.commit-vue'
    'body': """$store.commit('foo',data)""" 
  'JV commit("foo",data)  执行mutations的方法‹操作state›':
    'prefix': 'commit-vue'
    'body': """commit('foo',data)""" 
  'JV .$store.dispatch("goo",data)  执行actions的方法‹操作mutations›':
    'prefix': 'store.dispatch-vue'
    'body': """$store.dispatch('goo',data)""" 
  'JV dispatch("goo",data)  执行actions的方法‹操作mutations›':
    'prefix': 'dispatch-vue'
    'body': """dispatch('goo',data)""" 
  'JV .$http.get().then  GET请求':
    'prefix': 'http.get-vue'
    'body': """$http.get('${1:_url_}',{})  // 某接口
    .then(function(back){
      console.info('_url_','某接口',back.statusText);
    }
    ,function(err){
      console.warn('_url_','某接口',err); 
    }) """ 
  'JV .$http.post().then  POST请求':
    'prefix': 'http.post-vue'
    'body': """$http.post('${1:_url_}',{})  // 某接口
    .then(function(back){
      console.info('_url_','某接口',back.statusText);
    }
    ,function(error){
      console.warn('_url_','某接口',err); 
    })""" 
    


