# Your keymap
#
# Atom keymaps work similarly to style sheets. Just as style sheets use
# selectors to apply styles to elements, Atom keymaps use selectors to associate
# keystrokes with events in specific contexts. Unlike style sheets however,
# each selector can only be declared once.
#
# You can create a new keybinding in this file by typing "key" and then hitting
# tab.
#
# Here's an example taken from Atom's built-in keymap:
#
# 'atom-text-editor':
#   'enter': 'editor:newline'
#
# 'atom-workspace':
#   'ctrl-shift-p': 'core:move-up'
#   'ctrl-p': 'core:move-down'
#
# You can find more information about keymaps in these guides:
# * http://flight-manual.atom.io/using-atom/sections/basic-customization/#_customizing_keybindings
# * http://flight-manual.atom.io/behind-atom/sections/keymaps-in-depth/
#
# If you're having trouble with your keybindings not working, try the
# Keybinding Resolver: `Cmd+.` on macOS and `Ctrl+.` on other platforms. See the
# Debugging Guide for more information:
# * http://flight-manual.atom.io/hacking-atom/sections/debugging/#check-the-keybindings
#
# This file uses CoffeeScript Object Notation (CSON).
# If you are unfamiliar with CSON, you can read more about it in the
# Atom Flight Manual:
# http://flight-manual.atom.io/using-atom/sections/basic-customization/#_cson

# --------------------------------------------------------------------------------
'.platform-win32 atom-text-editor, .platform-linux atom-text-editor':
  'f4': 'find-and-replace:find-previous'    # 查找时,到上一个
  'ctrl-e': 'find-and-replace:select-undo'  # 取消ctrl-d的选中 
  'ctrl-p': 'find-and-replace:select-all'   # 选中所有 
  'alt-r': 'script:run'                     # script插件-运行代码 
  'alt-w': 'script:kill-process'            # script插件-清理进程 
  
'atom-workspace atom-text-editor:not([mini])':
  'alt-1': 'editor:fold-all'              # 折叠所有
  'alt-2': 'editor:unfold-all'            # 展开所有
  'alt-3': 'editor:fold-current-row'      # 折叠当前
  'alt-4': 'editor:unfold-current-row'    # 展开当前 
  'ctrl-q': 'editor:toggle-line-comments' # 行注释
  'alt-v': 'editor:duplicate-lines'       # 行复制
  'alt-s': 'editor:indent-selected-rows'  # 行缩进
  'alt-a': 'editor:outdent-selected-rows' # 行负缩进
  'alt-z': 'editor:join-lines'            # 行合并 
  'alt-enter': 'editor:newline-above'     # 行前插入 
  
'.platform-win32, .platform-linux':
  'alt-\\': 'tree-view:reveal-active-file' # 在文件目录中定位当前文档 
  
'.platform-win32 atom-text-editor':
  'alt-q': 'bracket-matcher:select-inside-brackets'   # 选中括号内的内容
  'alt-t': 'bracket-matcher:remove-matching-brackets' # 删除匹配括号
  'alt-x': 'bookmarks:toggle-bookmark'                # 行标记
  
'atom-workspace atom-text-editor':
  'alt-u': 'editor:upper-case'   # 字母大写 
  'alt-i': 'editor:lower-case'   # 字母小写 
  'alt-c': 'editor:select-line'  # 行选中 
  'ctrl-l': 'unset!'             # 行选中  
  
'atom-text-editor:not([mini])':
  'f5': 'editor:newline'                # 换行 
  'alt-d': 'editor:delete-line'         # 行删除
  
'atom-text-editor':
  'alt-p': 'autoprefixer'               # 浏览器兼容写法
  'alt-f': 'bracket-matcher:go-to-matching-bracket' # 标签跳转 [bracket matcher] 
  'alt-e': 'autocomplete-plus:activate' # 激活提示 
  
'atom-workspace':
  'alt-b': 'open-in-browsers:toggle' # 浏览器中打开文档 
  
'body':
  'f1': 'core:backspace'                    # 退格键、删除键 
  'alt-m': 'application:add-project-folder' # 添加项目文件夹 
  'alt-n': 'application:new-window'         # 新建窗口 
  'alt-l': 'pane:reopen-closed-item'        # 恢复关闭的文档 
  # 取消的快捷键  使快捷键不起作用 
  'ctrl-tab': 'unset!' # 文档切换
  'ctrl-m': 'unset!'   # 括号间跳转
  'alt-5': 'unset!'    # 切换文档 
  'alt-6': 'unset!'
  'alt-7': 'unset!'
  'alt-8': 'unset!'
  'alt-9': 'unset!'
  'alt-w': 'unset!'
   
  
# PS:须将同一类的放置在一起否则会不起作用,如'atom-workspace atom-text-editor:not([mini])':的一类必须放在一起

